var http = require('http'),
    https = require('https'),
    connect = require('connect'),
    httpProxy = require('http-proxy');
var fs = require('fs');
var esprima = require('esprima');
var escodegen = require('escodegen');
var estraverse = require('estraverse');


var selects = [];
var simpleselect = {};

//<img id="logo" src="/images/logo.svg" alt="node.js">
simpleselect.query = 'script';
simpleselect.func = function (node) {
    var input = '';
    console.log(input);
    // var myFile = fs.createWriteStream("theScript.txt", 'utf-8');
    // var readStream = node.createReadStream().pipe(myFile);
    //readStream.end()
    //myFile.end()

    var readStream = node.createReadStream();
    readStream.on('data',function(data){
      input += data.toString();
      //console.log('stream data ' + part);
    });

    readStream.on('end',function(){
      console.log('final output ' + input);
    });
    
    // var input = fs.readFileSync("theScript.txt", 'utf-8');
    //console.log("This is happening");
    //console.log(input);
    //var input = node;
    var ast = esprima.parse(input);
    console.log(ast)
    var blocks = [];
    blocks.push(ast.body);

    estraverse.traverse(ast, {
      enter: enter,
      leave: leave
    });

    var out = escodegen.generate(ast);
    console.log(out);
    
    //node.createWriteStream().end('<div>+ Trumpet</div>');    
    node.createWriteStream().end(out);  
}

selects.push(simpleselect);

//
// Basic Connect App
//
var app = connect();

var proxy = httpProxy.createProxyServer({
   // target: 'https://nodejs.org',
   // agent  : https.globalAgent, 
   // headers:{ host: 'nodejs.org' 
   secure: false,
   target: 'https://localhost:8080',
   agent  : https.globalAgent, 
   headers:{ host: 'localhost' }
})


app.use(require('../node_modules/harmon/examples')([], selects, true));

app.use(
  function (req, res) {
    proxy.web(req, res);
  }
);

http.createServer(app).listen(8000);

function enter(node){
  if (node.type === 'BlockStatement'){
    blocks.push(node.body);
  }
  if (node.type === 'Identifier'){
    if (node.name === 'width'){
      var curblock = blocks[blocks.length - 1];
      var toadd = esprima.parse('console.log("width extracted");').body[0];
      curblock.push(toadd);
    }
  }
}

function leave(node){
  if (node.type === 'BlockStatement'){
    blocks.pop();
  }
}